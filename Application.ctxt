#BlueJ class context
comment0.target=Application
comment0.text=\r\n\ Main\ GUI\ Application\ for\ the\ Swinburne\ Car\ Park\ System.\r\n\r\n\ \ \ This\ class\ provides\ the\ graphical\ user\ interface\ and\ all\ event\ handling\ for\r\n\ \ \ managing\ staff\ and\ visitor\ parking\ slots,\ parking\ and\ removing\ cars,\ and\ displaying\r\n\ \ \ parking\ slot\ status\ with\ full\ color\ coding\ and\ proper\ validation.\r\n\r\n\ @author\ [Dibbo\ Barua\ Chamak]\ [105299366]\r\n\ @version\ 1.0\ -\ May\ 20,\ 2025\r\n
comment1.params=
comment1.target=Application()
comment1.text=\r\n\ Constructs\ the\ main\ Application.\r\n\ Initializes\ the\ backend\ car\ park\ model,\ sets\ up\ the\ slot\ button\ mapping,\r\n\ builds\ the\ entire\ GUI,\ and\ refreshes\ the\ slot\ display\ to\ match\ the\ data.\r\n
comment10.params=
comment10.target=void\ deleteSlotDialog()
comment10.text=\r\n\ Allows\ the\ user\ to\ delete\ a\ parking\ slot\ (if\ it\ is\ not\ currently\ occupied).\r\n\ Handles\ user\ input\ and\ all\ feedback\ through\ GUI\ dialogs\ and\ the\ status\ label.\r\n
comment11.params=
comment11.target=void\ findCarDialog()
comment11.text=\r\n\ Lets\ the\ user\ search\ for\ a\ car\ by\ registration\ number.\r\n\ Displays\ slot,\ owner,\ and\ time/duration\ in\ a\ GUI\ dialog\ if\ found.\r\n
comment12.params=
comment12.target=void\ removeCarDialog()
comment12.text=\r\n\ Lets\ the\ user\ remove\ a\ car\ by\ registration\ number\ from\ any\ slot.\r\n
comment13.params=
comment13.target=void\ listSlotsDialog()
comment13.text=\r\n\ Displays\ a\ table\ with\ all\ parking\ slot\ info\ (slot\ ID,\ type,\ occupancy,\ car\ reg,\ owner,\ parked\ at,\ duration).\r\n\ Uses\ JTable\ in\ a\ scrollable\ GUI\ dialog\ for\ clarity\ and\ to\ meet\ requirements.\r\n
comment14.params=
comment14.target=void\ clearSlotsDisplay()
comment14.text=\r\n\ Clears\ the\ visual\ display\ panels\ for\ all\ parking\ slots.\r\n\ \r\n\ This\ method\ removes\ all\ slot\ buttons\ from\ both\ the\ visitor\ and\ staff\ panels,\r\n\ and\ refreshes\ the\ panels\ to\ update\ the\ GUI.\ Note\:\ This\ does\ not\ delete\ slots\r\n\ from\ the\ backend\ CarPark\ model;\ it\ only\ clears\ the\ GUI\ display.\r\n\ \r\n\ Used\ for\ demonstration\ or\ to\ temporarily\ hide\ all\ slots.\r\n
comment15.params=args
comment15.target=void\ main(java.lang.String[])
comment15.text=\r\n\ Launches\ the\ main\ application\ window.\r\n
comment2.params=
comment2.target=void\ initGUI()
comment2.text=\r\n\ Initializes\ and\ arranges\ all\ GUI\ components\ for\ the\ main\ application\ window.\r\n\ \r\n\ This\ includes\ building\ the\ title\ area,\ slot\ grid\ display,\ action\ buttons,\r\n\ status\ bar,\ and\ wiring\ up\ all\ event\ handlers.\r\n\ Ensures\ clear\ color-coding,\ logical\ layouts,\ readable\ fonts,\ and\ a\ user-friendly\ interface.\r\n
comment3.params=
comment3.target=void\ refreshSlots()
comment3.text=\r\n\ Updates\ and\ redraws\ the\ visual\ display\ of\ all\ parking\ slots.\r\n\ Each\ slot\ is\ shown\ as\ a\ button,\ colored\ by\ type\ and\ occupancy.\r\n\ Keeps\ slot\ and\ button\ logic\ in\ sync,\ and\ keeps\ the\ interface\ clear\ and\ up-to-date.\r\n
comment4.params=e
comment4.target=void\ mouseClicked(java.awt.event.MouseEvent)
comment5.params=slot
comment5.target=void\ parkCarDirectly(ParkingSlot)
comment5.text=\r\n\ Parks\ a\ car\ directly\ in\ the\ given\ parking\ slot\ after\ prompting\ the\ user\ for\ car\ details.\r\n\ \r\n\ This\ helper\ is\ typically\ triggered\ by\ left-clicking\ a\ slot\ button.\ It\ prompts\ the\ user\r\n\ for\ the\ car\ registration\ number\ and\ owner\ name,\ validates\ input,\ ensures\ the\ car\ isn't\r\n\ already\ parked,\ creates\ the\ Car\ object,\ records\ the\ parking\ time,\ and\ displays\ a\ dialog\r\n\ confirming\ the\ slot\ and\ time\ parked.\r\n\r\n\ @param\ slot\ The\ ParkingSlot\ object\ where\ the\ car\ will\ be\ parked\r\n
comment6.params=parkTime
comment6.target=java.lang.String\ getDuration(java.time.LocalDateTime)
comment6.text=\r\n\ Returns\ a\ string\ representing\ the\ duration\ between\ the\ given\ park\ time\r\n\ and\ the\ current\ time,\ formatted\ as\ hours,\ minutes,\ and\ seconds.\r\n\r\n\ @param\ parkTime\ The\ time\ the\ car\ was\ parked\ (LocalDateTime)\r\n\ @return\ A\ formatted\ string,\ e.g.\ "0\ hours\ 25\ minutes\ 20\ seconds"\r\n
comment7.params=str
comment7.target=java.lang.String\ capitalize(java.lang.String)
comment7.text=\r\n\ Capitalizes\ the\ first\ letter\ of\ the\ input\ string\ and\ makes\ all\ other\ letters\ lowercase.\r\n\r\n\ @param\ str\ The\ input\ string\ to\ capitalize\r\n\ @return\ The\ capitalized\ string,\ or\ the\ original\ if\ null\ or\ empty\r\n
comment8.params=
comment8.target=void\ addSlotDialog()
comment8.text=\r\n\ Pops\ up\ dialogs\ for\ the\ user\ to\ input\ a\ new\ slot's\ ID\ and\ type\ (staff/visitor).\r\n\ Adds\ the\ slot\ to\ the\ car\ park\ and\ refreshes\ the\ visual\ slot\ display.\r\n\ Ensures\ proper\ input\ validation\ and\ error\ reporting\ in\ GUI.\r\n
comment9.params=
comment9.target=void\ parkCarDialog()
comment9.text=\r\n\ Lets\ the\ user\ park\ a\ car\ into\ a\ slot,\ ensuring\:\r\n\ -\ Input\ is\ via\ dialogs,\ validated\ format\r\n\ -\ Car\ is\ not\ already\ parked\ in\ another\ slot\r\n\ -\ Slot\ is\ available\ and\ types\ match\ (staff/visitor)\r\n\ -\ Park\ time\ is\ recorded\r\n\ All\ output\ and\ errors\ shown\ in\ GUI\ dialogs/labels.\r\n
numComments=16
